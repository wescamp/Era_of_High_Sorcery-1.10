this_parses_in_both_wml_and_lua=hackily--{EOHS_LUA_FILE (<<-- fireball.cfg
-- #textdomain wesnoth-Era_of_High_Sorcery
local getmetatable,ipairs,next,pairs,setmetatable,tonumber,tostring,type,unpack = getmetatable,ipairs,next,pairs,setmetatable,tonumber,tostring,type,unpack
local wesnoth,table,string,math,os,debug,helper,_,EoHS,_G,_ENV = wesnoth,table,string,math,os,debug,EoHS.helper,EoHS._,EoHS,_G,nil

local affected_hexes_func = function(parameters)
  local result = {}
  local find = function(x,y) if not EoHS.get_circle_of_protection(x, y) then table.insert(result, {x=x, y=y, visual="harm"}) end end
  find(parameters.target_x, parameters.target_y)
  for x,y in helper.adjacent_tiles(parameters.target_x, parameters.target_y) do find(x,y) end
  return result
end
local get_fireball_attack = EoHS.skill_attack_func("evocation", function(attack) EoHS.remove_subtags(attack, "specials.chance_to_hit", "magical") end)

EoHS.make_spell("fireball", {
  image = "attacks/fireball.png",
  name = _"Fireball",
  description = _"Every unit in a diameter-3 circle is subject to your ranged fireball attack, except without the Magical special.",
  
  base_cost = { action_points=8, mana=16 },
  base_range = 3,
  target_type = EoHS.target_types.hex,
  
  affected_hexes = affected_hexes_func,
  
  make_extra_attributes = function(parameters, make_aspect, list_entry_only)
    local affected_hexes = affected_hexes_func(parameters)
    local actor = EoHS.get_unit(parameters.actor_id)
    for i,hex in ipairs(affected_hexes) do
      local unit = EoHS.get_seen_unit(hex.x,hex.y,actor.side)
      if unit then
        local value,details="",""
        local validity = "valid"
        local name = EoHS.unit_appellation(unit)
        if EoHS.unit_is_immune_to_direct_spell_damage(unit) then
          value = _"None"
          details = EoHS.unit_is_immune_to_direct_spell_damage_description(unit)
        else
          if not wesnoth.is_enemy(unit.side, actor.side) then validity = "undesirable" end
          if not list_entry_only then
            local attack_context = EoHS.game_action_simulations.fleshed_out_attack_context({
              attacker={x=actor.x,y=actor.y,attack=get_fireball_attack(actor)},
              defender={x=unit.x,y=unit.y}})
            value = attack_context.attacker.damage.."-"..attack_context.attacker.attacks
          end
        end
        make_aspect.type_value_and_details(EoHS.substitute(_"Damage to $1|", {name}), value, details, validity)
      end
    end
  end,
  
  happen = function(parameters)
    local affected_hexes = affected_hexes_func(parameters)
    local actor = EoHS.get_unit(parameters.actor_id)
    local attacks = {}
    
    local casting_image_1 = EoHS.unit_casting_image_stuff(actor, 1)
    local casting_image_2 = EoHS.unit_casting_image_stuff(actor, 2)
    local dx, dy = EoHS.pixels_to_hex(actor.x, actor.y, parameters.target_x, parameters.target_y)
    local animation = {
      base_score = 10,
      offset=0,
      start_time = -1300,
      { "frame", { image=casting_image_1, duration=100, }},
      { "frame", { image=casting_image_1, duration=100, }},
      { "frame", { image=casting_image_2, duration=1100, sound = "fire.wav", }},
      { "frame", { image=casting_image_2, duration=1200, sound = "explosion.ogg", }},
      { "frame", { image=casting_image_1, duration=100, }},
      fireball_start_time = -1101,
      { "fireball_frame", { image="misc/blank-hex.png", duration=1, }},
      { "fireball_frame", { image="projectiles/fireball-n-1.png", auto_vflip = false, auto_hflip = false, layer = 70, duration=50, y="10~0" }},
      { "fireball_frame", { image="projectiles/fireball-n-2.png", auto_vflip = false, auto_hflip = false, layer = 70, duration=50, y="0~-10" }},
    }
    local function x(frac)
      frac = math.max(0-0.001,frac)
      return (dx * frac)
    end
    local function y(frac)
      frac = math.max(0-0.001,frac)
      return -10 + (dy * frac) - (150 - (600*((frac - 0.5)^2)))
    end
    for i = 1,10 do
      local x1,x2,y1,y2 = x((i - 1) / 10),x(i / 10),y((i - 1) / 10),y(i / 10)
      local w111 = wesnoth.compare_versions(wesnoth.game_config.version, ">=", "1.11.0")
      local image
      if w111 then
            if (math.abs(y1-y2) > 3.732*math.abs(x1-x2)) then image = "projectiles/fireball-n.png"
        elseif (math.abs(y1-y2) > 1.000*math.abs(x1-x2)) then image = "projectiles/fireball-nw.png~ROTATE(-90)~FL(horiz)"
        elseif (math.abs(y1-y2) > 0.268*math.abs(x1-x2)) then image = "projectiles/fireball-nw.png"
        else                                                  image = "projectiles/fireball-n.png~ROTATE(90)" end
      else
        image = (math.abs(y1-y2) > 1.732*math.abs(x1-x2)) and "projectiles/fireball-n.png" or "projectiles/fireball-nw.png"
      end
      if y2>y1 then image=image.."~FL(vert)" end
      if x2<x1 then image=image.."~FL(horiz)" end
      table.insert(animation, { "fireball_frame", {
        layer = 70,
        duration = 100,
        image = image,--"projectiles/fireball-impact-1.png~SCALE(150,225)",
        auto_hflip = false,
        auto_vflip = false,
        x = x1.."~"..x2,
        y = y1.."~"..y2,
      }})
    end
    for i = 1,16 do
      table.insert(animation, { "fireball_frame", {
        layer = 70,
        duration = 75,
        image = "projectiles/fireball-impact-"..i..".png~SCALE(300,450)", --"projectiles/fireball-impact-"..i..".png~SCALE(250,375)",
        auto_hflip = false,
        auto_vflip = false,
        x = dx,
        y = dy
      }})
    end
    table.insert(animation, { "fireball_frame", { image="misc/blank-hex.png", duration=1, }})
    EoHS.add_temporary_anims(actor, { {"attack_anim", animation} })
    EoHS.put_unit(actor, {immediate=true})
    for i,hex in ipairs(affected_hexes) do
      local unit = EoHS.get_unit(hex.x,hex.y)
      if unit then
        table.insert(attacks, {context={
          attacker={x=actor.x,y=actor.y},
          defender={x=unit.x,y=unit.y}
        }, extras={is_spell = true, spend_moves_and_attacks = false, update_context_func = function(attack_context)
          local actor = EoHS.get_unit(parameters.actor_id)
          attack_context.attacker.attack = actor and get_fireball_attack(actor)
        end}})
      end
    end
    EoHS.parallel_attacks(attacks)
    actor = EoHS.get_unit(parameters.actor_id)
    if actor then
      EoHS.remove_temporary_anims(actor)
      EoHS.put_unit(actor, {immediate=true})
    end
  end,
})

-->>)}
