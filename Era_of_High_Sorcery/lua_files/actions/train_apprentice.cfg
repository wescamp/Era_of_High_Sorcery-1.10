this_parses_in_both_wml_and_lua=hackily--{EOHS_LUA_FILE (<<-- train_apprentice.cfg
-- #textdomain wesnoth-Era_of_High_Sorcery
local getmetatable,ipairs,next,pairs,setmetatable,tonumber,tostring,type,unpack = getmetatable,ipairs,next,pairs,setmetatable,tonumber,tostring,type,unpack
local wesnoth,table,string,math,os,debug,helper,_,EoHS,_G,_ENV = wesnoth,table,string,math,os,debug,EoHS.helper,EoHS._,EoHS,_G,nil

local w111 = wesnoth.compare_versions(wesnoth.game_config.version, ">=", "1.11.0")

local prototypes = {}
local make_prototype = function(type_name)
  local prototype_spec = {
    type=type_name,
    random_traits=false, random_gender=false, generate_name=false,
    moves=0, attacks_left=0,
    overlays="misc/hero-icon.png", 
    ellipse=w111 and "misc/ellipse-hero",
  }
  local wprototype = EoHS.create_wunit(prototype_spec)
  local prototype = wprototype.__cfg
  EoHS.set_unit_variable(prototype, "is_wizard", true)
  EoHS.set_unit_variable(prototype, "is_apprentice", true)
  EoHS.set_unit_variable(prototype, "wizard_level", 1)
  EoHS.update_all_type_adjustments(prototype, true)
  prototype.hitpoints = prototype.max_hitpoints
  EoHS.set_unit_dress_up_options(prototype, EoHS.normative_dress_up_options(prototype))
  
  prototypes[type_name] = prototype
  table.insert(prototypes, prototype)
end
make_prototype("Mage")
make_prototype("Elvish Lord")
make_prototype("Elvish Lady")
make_prototype("Dwarvish Runesmith")
make_prototype("Troll Shaman")
local side_prototypes = {}
local get_side_prototype = function(side, type_name)
  return EoHS.disunified(function()
    local s = side_prototypes[side]
    if not s then s = {}; side_prototypes[side] = s end
    local sp = s[type_name]
    if sp then return sp end
    sp = prototypes[type_name]
    sp.side = side
    EoHS.standardize_unit(sp)
    s[type_name] = sp
    return sp
  end)
end

local num_apprentices = function(side)
  return #wesnoth.get_units({ side=side, EoHS.has_unit_variable("is_apprentice") }) + #wesnoth.get_recall_units({ side=side, EoHS.has_unit_variable("is_apprentice") })
end
local apprentice_cost = function(unit_cost, extra_apprentices) return (unit_cost - 5 + 20*extra_apprentices) end

EoHS.make_action("train_apprentice", {
  image = "items/dummy.png",
  name = _"Train Apprentice",
  description = _"You recruit an apprentice in a castle, the way you normally recruit. They cost more for each apprentice you already have. Apprentices are level 1 wizards, but can't learn talents or alliances, can't spend gold on spells, and have 1 fewer skill points minus 1 per level (so with the default settings, they start with 4 skill points). If you have the elf, dwarf, or orc alliances, you can also recruit special unit types instead of human Mages.",
  
  base_cost = function(parameters)
    local actor = EoHS.get_unit(parameters.actor_id)
    return { gold=apprentice_cost(prototypes[parameters.apprentice_type or "Mage"].cost, num_apprentices(actor.side)) }
  end,
  target_type = EoHS.target_types.recruit,
  
  affected_hexes = function(parameters)
    return {{x=parameters.target_x,y=parameters.target_y,visual="help",require_no_invisible_enemy=true}}
  end,
  
  extra_parameters_dialog_grid = function(dialog_context, parameters)
    local g = function(contents) return { "grid", contents } end
    local r = function(contents) return { "row", contents } end
    local c = function(contents) return { "column", contents } end
    local actor = EoHS.get_unit(parameters.actor_id)
    if not parameters.apprentice_type then parameters.apprentice_type = "Mage" end
    local rows = {}
    local num = num_apprentices(actor.side)
    for i,prototype in ipairs(prototypes) do
      local allowed = true
      if prototype.type == "Elvish Lord" and not EoHS.get_unit_skill(actor, "elvish_alliance") then allowed = false end
      if prototype.type == "Dwarvish Runesmith" and not EoHS.get_unit_skill(actor, "dwarvish_alliance") then allowed = false end
      if prototype.type == "Troll Shaman" and not EoHS.get_unit_skill(actor, "orcish_mercenaries") then allowed = false end
      if allowed and (prototype.type ~= "Elvish Lady") then
        prototype = get_side_prototype(actor.side, prototype.type)
        local label
        local image
        if prototype.type == "Elvish Lord" then
          label = _"Elvish Noble"
          image = EoHS.collapse_image_aggregate("image_modded", EoHS.image_aggregate_cropped(EoHS.image_aggregates_combined(
            EoHS.image_aggregate_translated(EoHS.unit_thumbnail(get_side_prototype(actor.side, "Elvish Lady"), true), {x=10}),
            EoHS.image_aggregate_translated(EoHS.unit_thumbnail(prototype, true), {x=-10})
          ), {size={x=72,y=72},offset={x=0,y=0}}))
        else
          label = prototype.language_name
          image = EoHS.unit_thumbnail(prototype, true)
        end
        table.insert(rows, r{c{ horizontal_grow=true, EoHS.fake_listbox_entry(dialog_context, "m\nm\nm\nm\nmmmmmmmmm"..label, {
        {"image",{
          x = 0,
          y = "((height/2)-(image_height/2))",
          w = "(if(height<72,height,72))",
          h = "(if(height<72,height,72))",
          name = image
        }},
        {"text",{
          x=72,
          y=EoHS.macros.GUI__TEXT_VERTICALLY_CENTRED,
          w="(text_width)",
          h="(text_height)",
          font_size = EoHS.macros.GUI_NORMAL__FONT_SIZE__SMALL,
          color = EoHS.macros.GUI__FONT_COLOR_ENABLED__DEFAULT,
          text = EoHS.substitute(_"$1|\n$2| Gold", {label,apprentice_cost(prototype.cost, num)})
        }} }, parameters.apprentice_type == prototype.type, function() parameters.apprentice_type = prototype.type end) }})
      end
    end
    return g{r{
      c{vertical_alignment="top",EoHS.unit_preview_pane(dialog_context, get_side_prototype(actor.side, parameters.apprentice_type))},
      c{vertical_alignment="top",g(rows)}
    }}
  end,
  
  happen = function(parameters, extras)
    local actor = EoHS.get_unit(parameters.actor_id)
    local apprentice_type = parameters.apprentice_type
    if apprentice_type == "Elvish Lord" then
      if EoHS.side_is_angerpersonified(actor.side) then apprentice_type = "Elvish Lady"
      else apprentice_type = EoHS.random("Elvish Lord,Elvish Lady") end
    end
    local unit = EoHS.deep_copy(get_side_prototype(actor.side, apprentice_type))
    
    EoHS.set_unit_variable(unit, "id", nil)
    unit.id = nil -- to make wesnoth assign a new different unique id=, so savefiles don't break(?!) and possibly other issues
    unit.underlying_id = nil -- just to suppress a warning message
    unit.x = parameters.target_x
    unit.y = parameters.target_y
    unit.gender = nil
    unit.random_traits = true
    unit.random_gender = true
    unit.generate_name = true
    local settings = EoHS.get_wizard_settings(unit)
    EoHS.init_wizard_settings(settings)
    settings.skill_points_per_level = settings.skill_points_per_level - 1
    settings.skill_points_at_level_0 = settings.skill_points_at_level_0 - 1
    settings.can_spend_gold_on_spells = false
    
    EoHS.fake_recruit({unit})
  end,
})

-->>)}
