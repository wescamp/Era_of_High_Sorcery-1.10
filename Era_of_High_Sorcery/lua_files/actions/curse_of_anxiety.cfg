this_parses_in_both_wml_and_lua=hackily--{EOHS_LUA_FILE (<<-- dehydration.cfg
-- #textdomain wesnoth-Era_of_High_Sorcery
local getmetatable,ipairs,next,pairs,setmetatable,tonumber,tostring,type,unpack = getmetatable,ipairs,next,pairs,setmetatable,tonumber,tostring,type,unpack
local wesnoth,table,string,math,os,debug,helper,_,EoHS,_G,_ENV = wesnoth,table,string,math,os,debug,EoHS.helper,EoHS._,EoHS,_G,nil

EoHS.make_spell("curse_of_anxiety", {
  image = "attacks/dark-missile.png",
  name = _"Curse of Anxiety",
  description = _"You enchant a unit. For the next nine turns, whenever that unit attacks, retaliation will never miss. Casting the spell again on the same unit increases the duration by nine turns.",
  
  is_enchantment = true,
  
  base_cost = { action_points=5, mana=2 },
  base_range = 2,
  target_type = EoHS.target_types.unit_probably_enemy,
  
  affected_hexes = function(parameters)
    return {{x=parameters.target_x,y=parameters.target_y,visual="harm"}}
  end,
  
  happen = function(parameters, extras)
    EoHS.begin_casting(parameters.actor_id, parameters.target_x, parameters.target_y)
    local unit = EoHS.get_unit(parameters.target_x, parameters.target_y)
    EoHS.set_unit_variable(unit, "curse_of_anxiety_turns", (EoHS.get_unit_variable(unit, "curse_of_anxiety_turns") or 0) + 9)
    EoHS.update_curse_of_anxiety(unit)
    EoHS.update_unit_graphics(unit)
    EoHS.put_unit(unit, {immediate=true})
    wesnoth.float_label(unit.x, unit.y, "<span color='#000000'>".._"cursed".."</span>")
    extras.do_on_clients_who_see(function() wesnoth.fire("sound", { name = "wail-sml.wav" }) end)
    EoHS.finish_casting(parameters.actor_id)
  end,
})

EoHS.remove_curse_of_anxiety = function(unit)
  EoHS.set_unit_variable(unit, "curse_of_anxiety_turns")
  EoHS.remove_subtags(unit, "modifications.object", "EoHS_curse_of_anxiety")
  EoHS.remove_subtags(unit, "attack.specials.chance_to_hit", "EoHS_curse_of_anxiety")
end

EoHS.update_curse_of_anxiety = function(unit)
  local turns_left = EoHS.get_unit_variable(unit, "curse_of_anxiety_turns")
  EoHS.remove_subtags(unit, "modifications.object", "EoHS_curse_of_anxiety")
  EoHS.remove_subtags(unit, "attack.specials.chance_to_hit", "EoHS_curse_of_anxiety")
  local name = EoHS.substitute(_"curse of anxiety($1|)", {turns_left})
  local description
  if turns_left == 1 then description = _"This unit will always be hit in retaliation. The curse will end after this turn."
  elseif turns_left == 2 then description = _"This unit will always be hit in retaliation. The curse will persist one more turn after this."
  else description = EoHS.substitute(_"This unit will always be hit in retaliation. The curse will persist $1| more turns after this.", {turns_left-1}) end
  local special = {"chance_to_hit",{
    id="EoHS_curse_of_anxiety",
    name = name,
    name_inactive = name,
    description = description,
    description_inactive = description,
    active_on = "offense",
    apply_to = "opponent",
    value = 100,
  }}
  for i,attack in ipairs(EoHS.get_subtags(unit, "attack")) do
    table.insert(EoHS.force_subtag(attack, "specials"), special)
  end
  table.insert(EoHS.force_subtag(unit, "modifications"), {"object",{id="EoHS_curse_of_anxiety", {"effect",{apply_to="attack",{"set_specials",{mode="append", special}}}}}})
end

EoHS.at_side_turn_end("curse_of_anxiety_turns", function(units)
  for i,unit in ipairs(units.with_variable.curse_of_anxiety_turns or {}) do
    if unit.side == wesnoth.current.side then
      local turns_left = EoHS.get_unit_variable(unit, "curse_of_anxiety_turns") - 1
      if turns_left > 0 then
        EoHS.set_unit_variable(unit, "curse_of_anxiety_turns", turns_left)
        EoHS.update_curse_of_anxiety(unit)
      else
        EoHS.remove_curse_of_anxiety(unit)
      end
      EoHS.put_unit(unit)
    end
  end
end)

-->>)}
