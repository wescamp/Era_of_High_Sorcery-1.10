this_parses_in_both_wml_and_lua=hackily--{EOHS_LUA_FILE (<<-- corridor_of_frost.cfg
-- #textdomain wesnoth-Era_of_High_Sorcery
local getmetatable,ipairs,next,pairs,setmetatable,tonumber,tostring,type,unpack = getmetatable,ipairs,next,pairs,setmetatable,tonumber,tostring,type,unpack
local wesnoth,table,string,math,os,debug,helper,_,EoHS,_G,_ENV = wesnoth,table,string,math,os,debug,EoHS.helper,EoHS._,EoHS,_G,nil

local get_corridor_attack = EoHS.skill_attack_func("evocation", function(attack)
  attack.type = "cold"
  attack.damage = math.floor(0.5+(attack.damage * 0.60))
  attack.number = math.floor(0.5+(attack.number * 0.60))
  table.insert(EoHS.force_subtag(attack, "specials"), EoHS.macros.WEAPON_SPECIAL_SLOW[1])
end)

local path_types =
  {{1,1,1,1,1,1},
   {1,1,2,1,1,2},
   {1,2,1,2,1,2},}

EoHS.get_6hex_path_directions = function(x1,y1,x2,y2)
  if EoHS.distance_between(x1,y1,x2,y2) > 5 then return end
  for d,dir1 in ipairs({"n","ne","se","s","sw","nw"}) do
    for d,dir2 in ipairs({EoHS.direction_clockwise_from(dir1),EoHS.direction_counterclockwise_from(dir1)}) do
      for d,path_type in ipairs(path_types) do
        local x,y = x1,y1
        for i=1,5 do
          x,y = EoHS.get_loc_in_direction(x,y,(path_type[i]==1) and dir1 or dir2)
          if (x==x2) and (y==y2) then
            local result = {}
            for j=1,6 do table.insert(result,(path_type[j]==1) and dir1 or dir2) end
            return result
          end
        end
      end
    end
  end
end

local affected_hexes_func = function(parameters, known_or_actual)
  local actor = EoHS.get_unit(parameters.actor_id)
  local dirs = EoHS.get_6hex_path_directions(actor.x,actor.y,parameters.target_x,parameters.target_y)
  if not dirs then return {} end
  local x,y = actor.x,actor.y
  local result = {}
  for i=1,5 do
    x,y = EoHS.get_loc_in_direction(x,y,dirs[i])
    if not ((known_or_actual == "actual") and EoHS.location_is_passable or EoHS.location_is_known_passable)(x,y,actor.side) then break end
    table.insert(result, {x=x,y=y,visual="harm"})
  end
  return result
end

EoHS.make_spell("corridor_of_frost", {
  image = "attacks/iceball.png",
  name = _"Corridor of Frost",
  description = _"You strike each unit in a 5-hex-long path with a magical, cold, slowing attack, like your fireball attack but with 60% the normal strikes and damage. Also, every water or swamp hex in the path (not including fords) freezes into ice.",
  
  base_cost = { action_points = 7, mana = 9 },
  target_type = function(parameters) return {
    short_name = _"direction",
    name = _"Direction",
    details = "",
    validity = "valid"
  } end,
  
  affected_hexes = affected_hexes_func,
  
  make_extra_attributes = function(parameters, make_aspect, list_entry_only)
    local actor = EoHS.get_unit(parameters.actor_id)
    local affected_hexes = affected_hexes_func(parameters, "known")
    make_aspect.type_value_and_details(_"Maximum length:", "5", "", (EoHS.distance_between(actor.x,actor.y,parameters.target_x,parameters.target_y) <= 5) and "valid" or "impossible")
    make_aspect.type_value_and_details(_"Length:", #affected_hexes, "", (affected_hexes[1]) and "valid" or "impossible")
    
    -- TODO un-duplicate code with Fireball (and to a lesser extent Energy Blast)
    for i,hex in ipairs(affected_hexes) do
      local unit = EoHS.get_seen_unit(hex.x,hex.y,actor.side)
      if unit then
        local value,details="",""
        local validity = "valid"
        local name = EoHS.unit_appellation(unit)
        if EoHS.unit_is_immune_to_direct_spell_damage(unit) then
          value = _"None"
          details = EoHS.unit_is_immune_to_direct_spell_damage_description(unit)
        else
          if not wesnoth.is_enemy(unit.side, actor.side) then validity = "undesirable" end
          if not list_entry_only then
            local attack_context = EoHS.game_action_simulations.fleshed_out_attack_context({
              attacker={x=actor.x,y=actor.y,attack=get_corridor_attack(actor)},
              defender={x=unit.x,y=unit.y}})
            value = attack_context.attacker.damage.."-"..attack_context.attacker.attacks
          end
        end
        make_aspect.type_value_and_details(EoHS.substitute(_"Damage to $1|", {name}), value, details, validity)
      end
    end
  end,
  
  happen = function(parameters)
    local affected_hexes = affected_hexes_func(parameters, "actual")
    local middle = affected_hexes[math.ceil(#affected_hexes/2)]
    EoHS.begin_casting(parameters.actor_id, middle.x, middle.y)
    local actor = EoHS.get_unit(parameters.actor_id)
    
    local casting_image = EoHS.unit_casting_image_stuff(actor, 2)
    local old_hex_frames = {}
    local temporary_animations = {}
    for i,hex in ipairs(affected_hexes) do
      local dx, dy = EoHS.pixels_to_hex(actor.x, actor.y, hex.x, hex.y)
      local duration = 500
      local start_time = -duration/2
      local anim_contents = {
        base_score=10,
        {"filter",{EoHS.has_unit_variable("corridor_of_frost_hex_number_"..i)}},
        offset=0,
        start_time = start_time,
        ice_start_time = start_time,
        { "frame", { image=casting_image, duration=duration, sound="magic-faeriefire.ogg" }},
        { "ice_frame", { auto_vflip=false,duration=duration,image="terrain/alphamask.png~CS(127,191,255)",x=dx,y=dy,layer=35,alpha="0.2~0.7,0.7~0.4" }},
        ice_flash_start_time = -80,
        { "ice_flash_frame", { auto_vflip=false,duration=160,image="terrain/alphamask.png~CS(255,255,255)",x=dx,y=dy,layer=35,alpha="0.0~1.0,1.0~0.0" }},
      }
      for i,f in ipairs(old_hex_frames) do table.insert(anim_contents, f); anim_contents["old_hex_"..i.."_start_time"] = start_time end
      table.insert(temporary_animations, {"attack_anim",anim_contents})
      --EoHS.debug_table(anim_contents)
      table.insert(old_hex_frames, {"old_hex_"..i.."_frame",{auto_vflip=false,duration=duration,image="terrain/alphamask.png~CS(127,191,255)",x=dx,y=dy,layer=35,alpha=0.4}})
    end
    EoHS.add_temporary_anims(actor, temporary_animations)
    EoHS.put_unit(actor, {immediate=true})
    wesnoth.fire("redraw")
    for i,hex in ipairs(affected_hexes) do
      --wesnoth.scroll_to_tile(hex.x, hex.y, true)
      EoHS.set_unit_variable_immediate(actor, "corridor_of_frost_hex_number_"..i, true)
      EoHS.add_terrain_change(hex.x,hex.y,{name="freeze_water"})
      local unit = EoHS.get_unit(hex.x, hex.y)
      if unit then
        local attack_context = {
          attacker={x=actor.x,y=actor.y},
          defender={x=unit.x,y=unit.y}
        }
        EoHS.game_action_simulations.attack_unit(attack_context, {is_spell = true, spend_moves_and_attacks = false, update_context_func = function()
          local actor = EoHS.get_unit(parameters.actor_id)
          attack_context.attacker.attack = actor and get_corridor_attack(actor)
        end})
        actor = EoHS.get_unit(parameters.actor_id)
      else
        wesnoth.fire("animate_unit", {
          flag="attack",
          {"filter",{x=actor.x,y=actor.y}},
          hits = true,
          with_bars = true,
        })
      end
      EoHS.set_unit_variable_immediate(actor, "corridor_of_frost_hex_number_"..i)
    end
    
    actor = EoHS.get_unit(parameters.actor_id)
    if actor then
      EoHS.remove_temporary_anims(actor)
      EoHS.put_unit(actor, {immediate=true})
    end
    EoHS.finish_casting(parameters.actor_id)
  end,
})

-->>)}
