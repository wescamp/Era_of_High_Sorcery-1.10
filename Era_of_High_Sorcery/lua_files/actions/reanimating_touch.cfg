this_parses_in_both_wml_and_lua=hackily--{EOHS_LUA_FILE (<<-- reanimating_touch.cfg
-- #textdomain wesnoth-Era_of_High_Sorcery
local getmetatable,ipairs,next,pairs,setmetatable,tonumber,tostring,type,unpack = getmetatable,ipairs,next,pairs,setmetatable,tonumber,tostring,type,unpack
local wesnoth,table,string,math,os,debug,helper,_,EoHS,_G,_ENV = wesnoth,table,string,math,os,debug,EoHS.helper,EoHS._,EoHS,_G,nil

EoHS.make_touch_enchantment("reanimating_touch", {
  image = "attacks/touch-zombie.png",
  name = _"Reanimating Touch",
  description = _"You enchant your default melee attack. The next time you kill any unit on offense, you reanimate it on your side with (half plus 10) of its max hitpoints. If it wasn't undead before, it becomes an undead version of its unit type. While you hold a Reanimating Touch, you can also use it on your own or allies' units for 6 AP. (If you reanimate an ally's unit, your ally retains control of it.)",
  
  base_cost = { action_points=6, mana=7 },
  
  sound = "zombie-attack.wav",
})

EoHS.reanimating_touch_special = { "dummy", {
  id = "EoHS_reanimating_touch",
  name = _"reanimating touch",
  description = _"The next time this attack kills a unit on offense, that unit is reanimated and its current hitpoints are restored to (half plus 10) of its max hitpoints. If it wasn't undead before, it becomes an undead version of its unit type."
}}

EoHS.make_action("use_reanimating_touch", {
  image = "attacks/touch-zombie.png",
  name = _"Use Reanimating Touch",
  description = _"You use up your Reanimating Touch to kill and reanimate an ally.",
  
  base_cost = { action_points=6 },
  base_range = 1,
  target_type = function(parameters)
    local actor = EoHS.get_unit(parameters.actor_id)
    local unit = EoHS.get_seen_unit(parameters.target_x,parameters.target_y,actor.side)
    local details,validity = "","valid"
    if not unit then
      validity = "impossible"
    elseif wesnoth.is_enemy(unit.side, actor.side) then
      validity = "impossible"
    elseif unit == actor then
      validity = "impossible"
      details = _"You can't reanimate yourself."
    end
    return {
      short_name = _"ally",
      name = _"Ally",
      details = details,
      validity = validity
    }
  end,
  
  use_message = function(parameters)
    return _"$actor.name| ($actor.x|,$actor.y|) uses their Reanimating Touch on $target.name| ($target.x|,$target.y|)"
  end,
  
  affected_hexes = function(parameters)
    return {{x=parameters.target_x,y=parameters.target_y,visual="change"}}
  end,
  
  happen = function(parameters)
    -- TODO animate more
    local actor = EoHS.get_unit(parameters.actor_id)
    EoHS.set_unit_variable(actor, "touch_enchantment")
    EoHS.update_all_type_adjustments(actor) -- TODO should dummy abilities really be type adjustments? Seems like overkill when nothing else changes
    EoHS.put_unit(actor)
    EoHS.make_unit_reanimated(EoHS.get_unit(parameters.target_x,parameters.target_y), EoHS.get_unit(parameters.actor_id), true)
  end,
})

EoHS.make_unit_reanimated = function(unit, reanimator, do_on_map)
  if do_on_map then
    -- Momentary use of underlying_id to check if the unit has been replaced,
    -- much the way wesnoth's internals use it: probably safe.
    local id = unit.underlying_id
    EoHS.fire_event("last breath", unit.x, unit.y, reanimator.x, reanimator.y) -- TODO minor: attacks?
    EoHS.animate_unit({{"filter",{x=unit.x,y=unit.y}}, flag="death", with_bars = false,})
    unit = EoHS.get_unit(unit.x, unit.y)
    if not (unit and unit.underlying_id == id) then return end
    EoHS.fire_event("die", unit.x, unit.y, reanimator.x, reanimator.y)
    unit = EoHS.get_unit(unit.x, unit.y)
    if not (unit and unit.underlying_id == id) then return end
  end
  if unit.canrecruit then
    local side_recruits = wesnoth.sides[unit.side].recruit
    for i,recruit in ipairs(side_recruits) do
      unit.extra_recruit = (unit.extra_recruit and unit.extra_recruit.."," or "")..recruit
    end
  end
  EoHS.set_unit_variable(unit, "is_reanimated", true)
  EoHS.set_unit_variable(unit, "summoner_id")
  EoHS.update_all_type_adjustments(unit)
  if wesnoth.is_enemy(unit.side, reanimator.side) then unit.side = reanimator.side end
  EoHS.set_unit_action_points_immediate(unit, 0)
  unit.moves = 0
  unit.hitpoints = math.min(unit.max_hitpoints, math.floor(unit.max_hitpoints/2) + 10)
  if EoHS.get_unit_variable(unit, "is_mounted") then
    local mount = EoHS.get_mount(unit)
    EoHS.make_unit_reanimated(mount, reanimator, false)
  end
  if do_on_map then
    wesnoth.put_unit(unit)
    -- TODO wesnoth.fire("sound", {name="lich-hit-1.ogg"})
    wesnoth.float_label(unit.x, unit.y, "<span color='#000000'>"..(_"Reanimated!").."</span>")
    wesnoth.fire("redraw", { side=unit.side })
  end
end

-->>)}
