this_parses_in_both_wml_and_lua=hackily--{EOHS_LUA_FILE (<<-- mud_touch.cfg
-- #textdomain wesnoth-Era_of_High_Sorcery
local getmetatable,ipairs,next,pairs,setmetatable,tonumber,tostring,type,unpack = getmetatable,ipairs,next,pairs,setmetatable,tonumber,tostring,type,unpack
local wesnoth,table,string,math,os,debug,helper,_,EoHS,_G,_ENV = wesnoth,table,string,math,os,debug,EoHS.helper,EoHS._,EoHS,_G,nil

EoHS.make_touch_enchantment("mud_touch", {
  image = "attacks/mud-glob.png",
  name = _"Mud Touch",
  description = _"You enchant your default melee attack. The next time you hit on offense, the fight ends and the enemy is transformed into a ghastly mudcrawler. It retains its level, hitpoints, and approximate attack strength, but its base movement is divided by 2 (rounded down), and all its other stats are replaced with the new type. Works on any unit except for wizards and mudcrawlers.",
  
  base_cost = { action_points=6, mana=2 },
  
  sound = "squishy-hit.wav",
})

EoHS.mud_touch_special = { "dummy", {
  id = "EoHS_mud_touch",
  name = _"mud touch",
  description = _"The next time this attack hits on offense, the fight ends and the defender turns into a mudcrawler of similar strength. Works on any unit except for wizards and mudcrawlers."
}}

EoHS.make_action("use_mud_touch", {
  image = "attacks/mud-glob.png",
  name = _"Use Mud Touch",
  description = _"You use up your Mud Touch to turn an ally into a mudcrawler.",
  
  base_cost = { action_points=6 },
  base_range = 1,
  target_type = function(parameters)
    local actor = EoHS.get_unit(parameters.actor_id)
    local unit = EoHS.get_seen_unit(parameters.target_x,parameters.target_y,actor.side)
    local details,validity = "","valid"
    if not unit then
      validity = "impossible"
    elseif wesnoth.is_enemy(unit.side, actor.side) then
      validity = "impossible"
    elseif not EoHS.apply_mud_touch(unit, true) then
      validity = "impossible"
      details = _"Mud Touch doesn't work on wizards or mudcrawlers."
    end
    return {
      short_name = _"ally",
      name = _"Ally",
      details = details,
      validity = validity
    }
  end,
  
  use_message = function(parameters)
    return _"$actor.name| ($actor.x|,$actor.y|) uses their Mud Touch on $target.name| ($target.x|,$target.y|)"
  end,
  
  affected_hexes = function(parameters)
    return {{x=parameters.target_x,y=parameters.target_y,visual="change"}}
  end,
  
  happen = function(parameters)
    -- TODO animate more
    local actor = EoHS.get_unit(parameters.actor_id)
    EoHS.set_unit_variable(actor, "touch_enchantment")
    EoHS.update_all_type_adjustments(actor) -- TODO should dummy abilities really be type adjustments? Seems like overkill when nothing else changes
    EoHS.put_unit(actor)
    EoHS.apply_mud_touch(EoHS.get_unit(parameters.target_x,parameters.target_y))
  end,
})

EoHS.apply_mud_touch = function(unit, dry_run)
  local mud_touch_victim
  local is_mount
  if EoHS.get_unit_variable(unit, "is_wizard") then
    mud_touch_victim = EoHS.get_mount(unit)
    is_mount = true
  else
    mud_touch_victim = unit
  end
  if mud_touch_victim and (mud_touch_victim.type ~= "Mudcrawler") and (mud_touch_victim.type ~= "Giant Mudcrawler") then
    if not dry_run then
      EoHS.set_unit_variable(mud_touch_victim, "mud_touched", true)
      EoHS.update_all_type_adjustments(mud_touch_victim)
      if is_mount then
        EoHS.set_unit_variable(unit, "mount_type", mud_touch_victim.type)
        EoHS.update_all_type_adjustments(unit)
      end
      EoHS.put_unit(unit) -- NOT mud_touch_victim
      -- TODO wesnoth.fire("sound", {name="squishy-hit.wav"})
      wesnoth.float_label(unit.x, unit.y, "<span color='#805028'>".._"Transmogrified!".."</span>")
      -- TODO also an EoHS message?
    end
    return true
  end
  return false
end

-->>)}
