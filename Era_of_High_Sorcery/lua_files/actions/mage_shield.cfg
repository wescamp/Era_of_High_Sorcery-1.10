this_parses_in_both_wml_and_lua=hackily--{EOHS_LUA_FILE (<<-- mage_shield.cfg
-- #textdomain wesnoth-Era_of_High_Sorcery
local getmetatable,ipairs,next,pairs,setmetatable,tonumber,tostring,type,unpack = getmetatable,ipairs,next,pairs,setmetatable,tonumber,tostring,type,unpack
local wesnoth,table,string,math,os,debug,helper,_,EoHS,_G,_ENV = wesnoth,table,string,math,os,debug,EoHS.helper,EoHS._,EoHS,_G,nil

local shields_givable = function(actor, target)
  if not target then return 1 end
  return math.max(1, math.min(target.level, EoHS.skillset_realm_rank(EoHS.get_unit_skillset(actor), "evocation")))
end

EoHS.make_spell("mage_shield", {
  image = "icons/shield_wooden.png",
  name = _"Mage Shield",
  description = _"You enchant a unit with a shield that blocks the next swing (no matter how strong or weak) that hits it. If the unit is higher than level 1, its shield blocks that many more attacks, but not more than your Evocation rank.",
  
  is_enchantment = true,
  
  base_cost = { action_points=6, mana=2 },
  base_range = 1,
  target_type = EoHS.target_types.unit_probably_ally,
  
  affected_hexes = function(parameters)
    return {{x=parameters.target_x,y=parameters.target_y,visual="help"}}
  end,
  
  make_extra_attributes = function(parameters, make_aspect)
    local actor = EoHS.get_unit(parameters.actor_id)
    local target = EoHS.get_unit(parameters.target_x, parameters.target_y)
    if target then
      local shields = EoHS.get_unit_variable(target, "mage_shields")
      local givable = shields_givable(actor, target)
      local validity = "valid"
      local value = "None"
      local details = ""
      if shields and (shields > givable) then
        validity = "impossible"
        details = _"That unit has more shields than you can give it."
      elseif shields and (shields == givable) then
        validity = "impossible"
        details = _"That unit has as many shields as you can give it."
      else
        validity = "valid"
        value = givable - (shields or 0)
      end
      make_aspect.type_value_and_details(_"Shields added:", value, details, validity)
    end
  end,
  
  happen = function(parameters, extras)
    EoHS.begin_casting(parameters.actor_id, parameters.target_x, parameters.target_y)
    local actor = EoHS.get_unit(parameters.actor_id)
    local unit = EoHS.get_unit(parameters.target_x, parameters.target_y)
    EoHS.set_unit_variable(unit, "mage_shields", shields_givable(actor, unit))
    EoHS.update_conditional_abilities(unit)
    EoHS.update_unit_graphics(unit)
    EoHS.put_unit(unit, {immediate=true})
    extras.do_on_clients_who_see(function() wesnoth.fire("sound", { name = "magic-holy-miss-2.ogg" }) end)
    EoHS.finish_casting(parameters.actor_id)
  end,
})

EoHS.make_conditional_ability("mage_shield", function(unit)
  local shields = EoHS.get_unit_variable(unit, "mage_shields")
  if shields then
    return { "dummy", {
      name = EoHS.substitute(_"mage shield($1|)", {shields}),
      description = (shields > 1) and EoHS.substitute(_"The next $1| swings to hit this unit will be blocked.", {shields}) or _"The next swing to hit this unit will be blocked.",
    }}
  end
end)

-->>)}
