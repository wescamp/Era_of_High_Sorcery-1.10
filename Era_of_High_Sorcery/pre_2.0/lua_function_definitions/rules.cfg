#textdomain wesnoth-Era_of_High_Sorcery
{VARIABLE EoHS_icon {EOHS_ICON}} {VARIABLE EoHS_icon_small {EOHS_ICON_SMALL}} {VARIABLE EoHS_version_string {EOHS_VERSION_STRING}}
[lua]
  code=<< beginning_file("rules.cfg")


function create_eohs_rules_menu_item()
  create_eohs_menu_item({
    id = "eohs_view_rules",
    image = "items/book3.png~CROP(19,18,36,36)",
    description = _"View game rules, spell list",
    { "command", {
      { "lua", {
        code = "magic_rules_screen()"
      }},
    }},
  })
end

EoHS_version_string = wesnoth.get_variable("EoHS_version_string")

EoHS_rules = _"In this era (Era of High Sorcery "..EoHS_version_string.._"), Wizards are powerful spellcasters, far beyond the abilities of normal units.\n \nRight-click your leader and choose the 'Train your magical skills' option to choose your powers. (Don't forget to move/recruit on the first turn as well.) You begin the game with 10 skill picks, and you gain 4 more whenever you level up and 2 more whenever you, or your troops, kill an enemy wizard.\n \nAfter training in a spell realm, a wizard may cast spells via an item on the right-click menu. Casting a normal spell (unless it's marked ''Instant'') uses up your attack for the turn, but does not use up any movement points, so it is possible to move a few hexes, cast a spell, and then finish your move after that.\n \nYou must always invoke the right-click menu at the TARGET of your spell. For instance, to cast Energy Bolt at an enemy unit, you right-click on the enemy unit, pick the ''Cast a spell'' option, and select Energy Bolt from the list. If the spell's name appears in red, you can't cast it, but it gives details on what prevents you from casting it in that situation.\n \nSome spells are summoning spells that create other units for your army. Summon spells must target a hex adjacent to your leader. Summoned creatures are always loyal (charging no upkeep).\n \nWizards gain experience for killing with spells, and they also get one-quarter of the experience when one of their summons kills a unit.\n \nWizards are immune to all direct damage from spells, and if a wizard is attacked normally, it can't lose more than one quarter of its max hitpoints - if it would, the combat ends instead. Wizards are also capable of rudimentary flight; they can move over chasm and deep water at a cost of four moves."

function magic_rules_screen()
  local message = {
    speaker = "narrator",
    --side_for = wesnoth.current.side,
    image = EoHS_icon,
    message = _"The game rules, and descriptions of all spells, are listed below.\n(This is an info screen; picking an option does nothing.)",
    { "option", {
      message = wrap_text_to_width(EoHS_rules, wesnoth.get_variable("EoHS_text_wrap_width_"..wesnoth.current.side), 0)
    }}
  }
  for i,spell_pair in ipairs(EoHS_spells) do
    local spell_info = spell_pair[2]
    local complete_cost = get_complete_spell_cost(spell_info.id)
    for allowance in helper.child_range(spell_info, "realm_allowance") do
      complete_cost.cost_string = complete_cost.cost_string..", "..helper.get_child(EoHS_picks, allowance.realm.."_skill").name.._" level "..allowance.level
    end
    local spell_option_string = "&"..spell_info.image.."=<span color='#00FF00'>"..spell_info.name.." ("..complete_cost.cost_string..")</span>"
    wesnoth.set_variable("spell_base_range", spell_info.base_range)
    if spell_info.description ~= nil then
      spell_option_string = spell_option_string.."\n"..wrap_text_to_width(substitute_wml_variables(spell_info.description), wesnoth.get_variable("EoHS_text_wrap_width_"..wesnoth.current.side), 4)
    end
    table.insert(message, { "option", {
      message = spell_option_string
    }})
    wesnoth.set_variable("spell_base_range")
  end

  wesnoth.fire("message", message)
end

  >>
[/lua]

