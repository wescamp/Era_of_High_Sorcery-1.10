#textdomain wesnoth-Era_of_High_Sorcery

[lua]
  code=<< beginning_file("curse_of_anxiety.cfg")

table.insert(EoHS_spells, { "curse_of_anxiety", {
  image = "attacks/dark-missile.png",
  name = _"Curse of Anxiety",
  description = _"Curses an adjacent unit. For the next nine turns, whenever that unit attacks, retaliation will never miss.",
  base_casting_cost = 6,
  base_range = 1,

  is_enchantment = true,
  warn_about_self_casting = true,

  { "realm_allowance", {
    realm = "necromancy",
    level = 2,
  }},
  
  restrictions = function (circumstances, cant_cast_messages)
    if circumstances.target_unit and unit_has_explicit_enchantment(circumstances.target_unit, "curse_of_anxiety") then
      table.insert(cant_cast_messages, _"You can't cast a Curse of Anxiety on a unit currently afflicted with one.")
    end
  end,

  effects = function (circumstances)
    set_unit_variable(circumstances.target_unit, "curse_of_anxiety_duration", 9)
    wesnoth.float_label(circumstances.target_unit.x, circumstances.target_unit.y, "<span color='#000000'>".._"cursed".."</span>")
    wesnoth.fire("sound", { name = "wail-long.wav" })
    grant_explicit_enchantment(circumstances.target_unit, "curse_of_anxiety")
    wesnoth.put_unit(circumstances.target_unit)
  end,

  -- Hack - make it time out "per turn on which you start with the enchantment",
  -- but only disappear after the turn
  once_per_turn_refresh = function ()
    local cursed = get_unit_array({ side = wesnoth.current.side, has_explicit_enchantment("curse_of_anxiety") })
    for i,unit in ipairs(cursed) do
      local turns_left = get_unit_variable(unit, "curse_of_anxiety_duration")
      set_unit_variable(unit, "curse_of_anxiety_duration", turns_left - 1)
      update_curse_of_anxiety(unit)
      wesnoth.put_unit(unit)
    end
  end,
  
  once_per_side_turn = function ()
    local cursed = get_unit_array({ has_explicit_enchantment("curse_of_anxiety") })
    for i,unit in ipairs(cursed) do
      local turns_left = get_unit_variable(unit, "curse_of_anxiety_duration")
      if turns_left <= 0 then
        remove_explicit_enchantment(unit, "curse_of_anxiety")
      end
      wesnoth.put_unit(unit)
    end
  end
}})

function update_curse_of_anxiety(unit)
  local modifications = helper.get_child(unit, "modifications")
  local curse_object = helper.get_child(modifications, "object", "EoHS_explicit_enchantment_object_for_curse_of_anxiety")
  local turns_left = get_unit_variable(unit, "curse_of_anxiety_duration")
  local desc = "Cursed:\nThis unit will always be hit in retaliation.\n\nThis ability was granted by a spell, and is temporary. "
  if turns_left == 0 then
    desc = desc.."It will disappear after this turn."
  elseif turns_left == 1 then
    desc = desc.."It will persist for 1 more turn."
  else
    desc = desc.."It will persist for "..turns_left.." more turns."
  end
  curse_object[1][2][1][2][1][2].description = desc
  regenerate_unit_attributes(unit, { abilities=true })
end

table.insert(EoHS_explicit_enchantments, { "curse_of_anxiety", {
  { "effect", {
    apply_to = "new_ability",
    { "abilities", {
      { "dummy", {
        id = "curse_of_anxiety_dummy_ability",
        name = _"male^cursed",
        female_name = _"female^cursed",
        --description = _"Cursed:\nThis unit will always be hit in retaliation.",
      }},
    }},
  }},
  { "weapon_modifications", {
    { "special", {
      type = "chance_to_hit",
      name = _"cursed",
      description = _"Cursed:\nThis unit will always be hit in retaliation.",
      active_on = "offense",
      apply_to = "opponent",
      value = 100
    }}
  }},
  application_effects = update_curse_of_anxiety,
  removal_effects = function (unit)
    set_unit_variable(unit, "curse_of_anxiety_duration")
  end,
}})

  >>
[/lua]


