#textdomain wesnoth-Era_of_High_Sorcery

[lua]
  code=<< beginning_file("monsters_nest.cfg")

table.insert(EoHS_spells, { "monsters_nest", {
  image = "scenery/nest-full.png", image_xoffs = 0, image_yoffs = -10,
  name = _"Monsters' Nest",
  description = _"Creates a nest in an empty hex next to you. At the end of each of your turns, the nest spawns one or more randomly chosen monsters - usually giant rats, giant scorpions, and giant spiders. If it's near deep water, it can also spawn cuttlefish and tentacles. The spawns have upkeep and don't count as summons. Some of the monsters' stats are different from normal.",
  base_casting_cost = 121,
  base_range = 1,

  { "realm_allowance", {
    realm = "nature_magic",
    level = 13,
  }},

  restrictions = function (circumstances, cant_cast_messages)
    if circumstances.target_unit then
      table.insert(cant_cast_messages, _"You can't create a monsters' nest on top of a unit.")
    end
    if not unit_can_move_on_hex(monsters_nest_proxy, circumstances.target_x, circumstances.target_y) then
      table.insert(cant_cast_messages, _"You can't create a nest where a normal land unit can't walk.")
    end
  end,

  effects = function (circumstances)
    wesnoth.fire("sound", { name = "bat-flapping.wav" })
    wesnoth.fire("sound", { name = "claws.ogg" })
    wesnoth.fire("sound", { name = "drake-hit-1.ogg" })
    wesnoth.fire("sound", { name = "entangle.wav" })
    wesnoth.fire("sound", { name = "horse-die.ogg" })
    wesnoth.fire("sound", { name = "wolf-growl-3.ogg" })
    wesnoth.fire("sound", { name = "petrified.ogg" })
    
    local nest = naive_deep_copy(monsters_nest_table)
    nest.side = circumstances.caster.side
    set_unit_variable(nest, "EoHS_owning_unit", circumstances.caster.underlying_id)
    nest = wesnoth.create_unit(nest).__cfg
    nest.x = circumstances.target_x
    nest.y = circumstances.target_y
    put_unit_table(nest)
    unit_was_artificially_created(nest)
  end,
  
  once_per_side_turn = function ()
    local nests = get_unit_array({ { "filter_wml", { { "variables", { EoHS_monsters_nest_spawn_soon=true }} }} })
    for i,nest in ipairs(nests) do
      local getloc = function () 
        local empty_nearby_locs = wesnoth.get_locations({
          { "not", {
            { "filter", {
            }}
          }},
          { "not", {
            terrain = "Q*"
          }},
          { "and", {
            x = nest.x,
            y = nest.y,
            radius = 3,
           { "filter_radius", is_reasonable_location }
          }}
        })
        local num_empty_locs = table.getn(empty_nearby_locs)
        if num_empty_locs > 0 then
          local which = wml_random("1.."..num_empty_locs)
          local result = { x = empty_nearby_locs[which][1], y = empty_nearby_locs[which][2] }
          result.terrain = wesnoth.get_terrain(result.x, result.y)
          return result
        end
      end
      
      local spawn_unit = function (loc, table)
        local spawned_unit = naive_deep_copy(table)
        spawned_unit.side = nest.side
        set_unit_variable(spawned_unit, "EoHS_owning_unit", get_unit_variable(nest, "EoHS_owning_unit"))
        spawned_unit = wesnoth.create_unit(spawned_unit).__cfg
        -- Monsters should have traits anyway...
        hack_give_random_traits(spawned_unit)
        spawned_unit.x = loc.x
        spawned_unit.y = loc.y
        put_unit_table(spawned_unit)
        unit_was_artificially_created(spawned_unit)
      end
      
      if wml_random("1..3") == 3 then
        -- make a big one!
        local loc = getloc()
        if loc then
          if string.match(loc.terrain, "^Wo") then
            spawn_unit(loc, monsters_nest_cuttlefish_table)
          else
            spawn_unit(loc, monsters_nest_spider_table)
          end
        end
      else
        -- make a bunch of little ones
        local amount = wml_random("5..8")
        while amount > 0 do
          local loc = getloc()
          if not loc then break end
          if string.match(loc.terrain, "^Wo") then
            spawn_unit(loc, monsters_nest_tentacle_table)
            amount = amount - 1
          else
            if wml_random("1..6") == 6 then
              spawn_unit(loc, monsters_nest_scorpion_table)
              amount = amount - 2
            else
              spawn_unit(loc, monsters_nest_rat_table)
              amount = amount - 1
            end
          end
        end
      end
      set_unit_variable(nest, "EoHS_monsters_nest_spawn_soon")
      wesnoth.put_unit(nest)
    end
    
    local next_nests = get_unit_array({ side = wesnoth.current.side, has_eohs_special("is_monsters_nest") })
    for i,nest in ipairs(next_nests) do
      set_unit_variable(nest, "EoHS_monsters_nest_spawn_soon", true)
      wesnoth.put_unit(nest)
    end
  end
}})
  
function set_level_to_5(unit)
  unit.level = 5
end
function set_level_to_0(unit)
  unit.level = 0
end

monsters_nest_table = {
  type = "Giant Spider",
  random_traits = false,
  random_gender = false,
  generate_name = false,
  upkeep = "full",
  name = _"Monsters' Nest",
  { "variables", {
    EoHS_special_is_monsters_nest = true,
    EoHS_monsters_nest_spawn_soon = true,
    { "after_regenerating_level", {
      lua_function = "set_level_to_5"
    }}
  }},
  { "modifications", {
    { "object", {
      { "effect", {
        apply_to = "remove_attacks"
      }},
      { "effect", {
        apply_to = "movement",
        set = 0
      }},
      { "effect", {
        apply_to = "hitpoints",
        increase_total = 34
      }},
      { "effect", {
        apply_to = "max_experience",
        set = 9999
      }},
      { "effect", {
        apply_to = "resistance",
        replace = true,
        { "resistance", {
          fire = 150,
          cold = 80,
          arcane = 80,
          impact = 80,
          pierce = 60,
          blade = 110
        }}
      }},
      { "effect", {
        apply_to = "defense",
        replace = true,
        { "defense", {
          castle = 60,
          cave = 80,
          flat = 80,
          forest = 70,
          frozen = 80,
          fungus = 70,
          hills = 70,
          mountains = 60,
          reef = 80,
          sand = 80,
          shallow_water = 80,
          swamp_water = 80,
          village = 80
        }}
      }},
      { "effect", {
        apply_to = "image_mod",
        replace = "~O(0)~BLIT(scenery/nest-full.png)",
      }},
    }}
  }}
}

monsters_nest_spider_table = {
  type = "Giant Spider",
  { "variables", {
    { "after_regenerating_level", {
      lua_function = "set_level_to_2"
    }}
  }},
  { "modifications", {
    { "object", {
      { "effect", {
        apply_to = "hitpoints",
        increase_total = -11
      }},
      { "effect", {
        apply_to = "attack",
        increase_damage = "-20%"
      }},
    }}
  }}
}
monsters_nest_proxy = wesnoth.create_unit(monsters_nest_spider_table).__cfg
monsters_nest_cuttlefish_table = {
  type = "Cuttle Fish",
  { "modifications", {
    { "object", {
      { "effect", {
        apply_to = "hitpoints",
        increase_total = -20
      }},
      { "effect", {
        apply_to = "attack",
        increase_damage = 1
      }},
    }}
  }}
}
monsters_nest_scorpion_table = {
  type = "Giant Scorpion"
}
monsters_nest_rat_table = {
  type = "Giant Rat",
  { "modifications", {
    { "object", {
      { "effect", {
        apply_to = "attack",
        increase_damage = 1
      }},
    }}
  }}
}
monsters_nest_tentacle_table = {
  type = "Tentacle of the Deep",
  { "variables", {
    { "after_regenerating_level", {
      lua_function = "set_level_to_0"
    }}
  }},
  { "modifications", {
    { "object", {
      { "effect", {
        apply_to = "movement",
        increase = 1
      }},
    }}
  }}
}

  >>
[/lua]


