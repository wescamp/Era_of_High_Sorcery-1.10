#textdomain wesnoth-Era_of_High_Sorcery

[lua]
  code=<< beginning_file("wraithform.cfg")

table.insert(EoHS_spells, { "wraithform", {
  image = "attacks/wail.png",
  name = _"Wraithform",
  description = _"You transform into a Wraith - or Spectre, depending on your level - with the same current and maximum hitpoints as yourself. The effect lasts as long as you wish, and you can end it at any time via a drop-down menu option. However, you can't cast spells while you are a Wraith, and if you die as a Wraith, you're dead. Transforming - in either direction - approximately preserves the fraction of your moves that you have left, and you can immediately attack after becoming a Wraith. The Wraith form cannot level up, but you keep all experience it gains.",
  base_casting_cost = 9,
  base_range = "self",

  { "realm_allowance", {
    realm = "necromancy",
    level = 8,
  }},

  restrictions = function (circumstances, cant_cast_messages)
    if unit_has_eohs_special(circumstances.caster, "is_mounted") then
      table.insert(cant_cast_messages, _"You can't cast Wraithform while mounted.")
    end
  end,

  effects = function (circumstances)
    wesnoth.fire("sound", { name = "magic-holy-miss-1.ogg" })
    if circumstances.target_unit.level > 2 then
      transmogrify_and_put_and_display_unit(circumstances.target_unit, "greater_wraithform")
    else
      transmogrify_and_put_and_display_unit(circumstances.target_unit, "wraithform")
    end
    circumstances.target_unit = updated_unit_table(circumstances.target_unit)
    if circumstances.target_unit then
      circumstances.target_unit.attacks_left = circumstances.target_unit.attacks_left + 1
      set_unit_variable(circumstances.target_unit, "entered_wraithform_turn", wesnoth.current.turn)
      set_unit_variable(circumstances.target_unit, "entered_wraithform_side", wesnoth.current.side)
      wesnoth.put_unit(circumstances.target_unit)
    end
  end,

  once_per_campaign = function ()
    create_eohs_menu_item({
      id = "eohs_a_end_wraithform",
      image = "attacks/fist-human.png~SCALE(36,36)",
      description = _"End Wraithform",
      { "filter_location", {
        { "filter", {
          side = "$side_number",
          { "and", {
            outermost_transmogrification_is("wraithform"),
            { "or", { outermost_transmogrification_is("greater_wraithform"), }},
          }}
        }},
      }},
      { "command", {
        { "lua", {
          code = "end_wraithform(get_unit_table({ x = wesnoth.current.event_context.x1, y = wesnoth.current.event_context.y1 }))"
        }},
      }},
    })
  end,
}})

function end_wraithform(unit)
  wesnoth.fire("sound", { name = "magic-dark-miss.ogg" })
  reverse_outermost_transmogrification_and_put_and_display_unit(unit)
  unit = updated_unit_table(unit)
  if unit then
    if get_unit_variable(unit, "entered_wraithform_turn") == wesnoth.current.turn and get_unit_variable(unit, "entered_wraithform_side") == wesnoth.current.side then
      -- can't use Wraithform to jump around and cast on the same turn
      unit.attacks_left = unit.attacks_left - 1
      wesnoth.put_unit(unit)
    end
  end
  event_is_over_its_okay_to_advance_now()
end

table.insert(EoHS_transmogrifications, { "wraithform", {
  type = "Wraith",
  preserve_maxhp = true,
  xp_is_for_natural_form_only = true,
  displayed_string = _"wraithform",
  color = "000000",
}})

table.insert(EoHS_transmogrifications, { "greater_wraithform", {
  type = "Spectre",
  preserve_maxhp = true,
  xp_is_for_natural_form_only = true,
  displayed_string = _"wraithform",
  color = "000000",
}})

  >>
[/lua]


