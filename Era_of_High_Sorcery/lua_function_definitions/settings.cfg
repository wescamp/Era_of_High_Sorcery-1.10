#textdomain wesnoth-Era_of_High_Sorcery
{VARIABLE EoHS_icon {EOHS_ICON}} {VARIABLE EoHS_icon_small {EOHS_ICON_SMALL}} {VARIABLE EoHS_version_string {EOHS_VERSION_STRING}}
[lua]
  code=<< beginning_file("settings.cfg")

EoHS_icon = wesnoth.get_variable("EoHS_icon")
EoHS_icon_small = wesnoth.get_variable("EoHS_icon_small")
EoHS_version_string = wesnoth.get_variable("EoHS_version_string")

no_image = "buttons/WML-custom.png~CROP(0,0,1,1)"

canned_eohs_settings = {
  standard = {
    spellcasting_resource = "gold",
    initial_picks = 10,
  },
  survival = {
    spellcasting_resource = "mana",
    initial_picks = 7,
  },
  rpg = {
    spellcasting_resource = "mana",
    initial_picks = 7,
    forbid_unit_creation = "true",
  },
}

function set_to_settings_message_speaker(message_tag_contents)
  message_tag_contents.speaker = "narrator"
  message_tag_contents.caption = _"Settings"
  message_tag_contents.image   = EoHS_icon
  message_tag_contents.side_for = wesnoth.current.side
  return message_tag_contents
end

function choose_eohs_settings()
  eohs_settings_independent_init() -- in case it hasn't happened already

  -- Don't re-choose settings!!!! That would be bad.
  -- Also, the presence of this line allows you to call choose_eohs_settings() freely any time after prestart, much the way you would call the init functions over and over in case they're missed the first time (i.e. in the campaign version.)
  if wesnoth.get_variable("EoHS_settings_have_been_chosen") then return end

  wesnoth.set_variable("which_settings_chosen")
  wesnoth.fire("message", set_to_settings_message_speaker({
    message = _"What rule set would you like to use?",
    { "option", {}}, -- HACK: semi-hidden no-effect first option so that the AI doesn't pick settings for you.
    eohs_simple_option("*&"..no_image.."=".._"Default EoHS".."=".._"10 starting picks\nCast spells using gold\nBest for player-versus-player battles.", "which_settings_chosen", "standard"),
    eohs_simple_option("&"..no_image.."=".._"Survival era".."=".._"7 starting picks\nCast spells using mana\nBest for survival scenarios.", "which_settings_chosen", "survival"),
    eohs_simple_option("&"..no_image.."=".._"RPG era".."=".._"7 starting picks\nCast spells using mana\nNo summoning\nBest for RPG scenarios that rely on one unit per player.", "which_settings_chosen", "rpg"),
 --   eohs_simple_option("&"..no_image.."=".._"Empire Builder era".."=".._"",
    eohs_simple_option("&"..no_image.."=".._"Custom settings".."=".._"Choose your own values for each setting.", "which_settings_chosen", "custom"),
  }))

  local which_settings_chosen = wesnoth.get_variable("which_settings_chosen")
  wesnoth.set_variable("which_settings_chosen")
  if which_settings_chosen then
    if which_settings_chosen == "custom" then
      choose_custom_eohs_settings()
    else
      wesnoth.set_variable("EoHS_settings", canned_eohs_settings[which_settings_chosen])
    end
  
    eohs_settings_have_been_chosen()
  end
end

function choose_custom_eohs_settings()
  wesnoth.set_variable("which_EoHS_settings_screen", "basic")
  while wesnoth.get_variable("which_EoHS_settings_screen") ~= "exit" do
    local message_contents = set_to_settings_message_speaker({})
    if wesnoth.get_variable("which_EoHS_settings_screen") == "basic" then
      table.insert(message_contents, eohs_simple_option("&"..no_image.."=".._"Done choosing settings.", "which_EoHS_settings_screen", "exit"))
      table.insert(message_contents, eohs_simple_option("&misc/icon-advance.png=".._"Initial picks".."="..wesnoth.get_variable("EoHS_settings.initial_picks"), "special_option", "choose_initial_picks"))
      if boolean_equals_true(wesnoth.get_variable("EoHS_settings.spellcasting_resource") == "gold") then
        table.insert(message_contents, eohs_simple_option("&themes/gold-t.png=".._"Spellcasting resource".."=".._"gold", "EoHS_settings.spellcasting_resource", "mana"))
      else
        table.insert(message_contents, eohs_simple_option("&themes/units-t.png=".._"Spellcasting resource".."=".._"mana", "EoHS_settings.spellcasting_resource", "gold"))
      end
      if boolean_equals_true(wesnoth.get_variable("EoHS_settings.forbid_unit_creation")) then
        table.insert(message_contents, eohs_simple_option("&buttons/checkbox-pressed.png=".._"Forbid unit creation".."=".._"on", "EoHS_settings.forbid_unit_creation", "false"))
      else
        table.insert(message_contents, eohs_simple_option("&buttons/checkbox.png=".._"Forbid unit creation".."=".._"off", "EoHS_settings.forbid_unit_creation", "true"))
      end
      table.insert(message_contents, eohs_simple_option("&"..no_image.."=".._"Spell price multiplier".."="..(wesnoth.get_variable("EoHS_settings.multiply_spell_prices") or 1), "special_option", "choose_price_multiplier"))
     -- table.insert(message_contents, eohs_simple_option("&misc/icon-advance.png=".._"Wizard XP percent".."="..(wesnoth.get_variable("EoHS_settings.multiply_spell_prices") or 1), "special_option", "choose_price_multiplier"))
    end

    wesnoth.set_variable("special_option")
    wesnoth.fire("message", message_contents)
    local special_option = wesnoth.get_variable("special_option")
    wesnoth.set_variable("special_option")
    if special_option == "choose_initial_picks" then
      wesnoth.fire("message", set_to_settings_message_speaker({
        message = _"How many skill picks should each side start with?",
        { "text_input", { label = _"Amount:", variable = "amount_requested" }},
      }))
      local amount = tonumber(wesnoth.get_variable("amount_requested"))
      if amount then
        wesnoth.set_variable("EoHS_settings.initial_picks", math.floor(amount))
      end
      wesnoth.set_variable("amount_requested")
    end
    if special_option == "choose_price_multiplier" then
      wesnoth.fire("message", set_to_settings_message_speaker({
        message = _"Multiply the prices of all spells by what amount? (Can be a decimal value, such as 0.25.)",
        { "text_input", { label = _"Amount:", variable = "amount_requested" }},
      }))
      local amount = tonumber(wesnoth.get_variable("amount_requested"))
      if amount then
        wesnoth.set_variable("EoHS_settings.multiply_spell_prices", amount)
      end
    end
  end
end

  >>
[/lua]

