#textdomain wesnoth-Era_of_High_Sorcery

[lua]
  code=<< beginning_file("wizard_skin_and_hair_recoloring.cfg")

function temporary_create_recoloring_info(tag_pair)
  wesnoth.fire("unit", {
    to_variable="EOHS_LUA_TEMP",
    x=1, y=1, side=1, type="Boat",
    { "modifications", {
      { "object", {
        { "effect", {
          apply_to="image_mod",
          tag_pair
        }}
      }}
    }}
  })
  wesnoth.set_variable("EOHS_LUA_TEMP")
end

function create_recoloring_info(tag_pair)
  wesnoth.set_variable("EoHS_recoloring_tags."..tag_pair[1].."["..(wesnoth.get_variable("EoHS_recoloring_tags."..tag_pair[1]..".length") or 0).."]", tag_pair[2])
  temporary_create_recoloring_info(tag_pair)
end

local tags_we_need_to_recreate = wesnoth.get_variable("EoHS_recoloring_tags")
if tags_we_need_to_recreate then
  for i,tag_pair in ipairs(tags_we_need_to_recreate) do
    temporary_create_recoloring_info(tag_pair)
  end
end

wizard_skin_without_pure_white_palette="cf7f62,c5956a,a9794f,f6d39b,7b4231,73432b,f8c090,784838,3a211c,faf3c9,a46d31,723e0d,f9c292,ffefc6,ce8463,704010,b17632,b15902,f8c393,f8e0c3,6b3c0b,d8a67a,876246"
create_recoloring_info({ "color_palette", {
  wizard_skin_female=wizard_skin_without_pure_white_palette,
  wizard_skin_male=wizard_skin_without_pure_white_palette..",ffffff",
  wizard_hair_female="207,168,122, 252,252,252, 255,255,255, 235,213,188, 217,186,183, 154,116,88, 122,74,63, 95,55,31, 78,52,48, 23,23,23",
  wizard_hair_male="c18371,dab0a4,ffefc6,a9543c,8b3219,592010",
}})

-- "Natural" colors:
wizard_black_hair = { r=50,  g=40,  b=30  }
wizard_brown_hair = { r=140, g=70,  b=30  }
wizard_red_hair   = { r=200, g=60,  b=0   }
wizard_blond_hair = { use_base = true }

wizard_dark_skin  = { r=90,  g=30,  b=0   }
wizard_tan_skin   = { r=160, g=80,  b=30  }
wizard_pale_skin  = { use_base = true }

-- Common artifical colors:
wizard_hot_pink_hair   = { r=255, g=  0, b=128 }
wizard_bright_red_hair = { r=240, g= 30, b=  0 }
wizard_purple_hair     = { r=150, g=  0, b=255 }
wizard_turquoise_hair  = { r=  0, g=190, b=190 }

function current_wizard_skin_color(unit)
  local variables = helper.get_child(unit, "variables")
  local current_skin_and_hair_tag = helper.get_child(variables, "skin_and_hair_colors")
  return current_skin_and_hair_tag[1][2]
end
function current_wizard_hair_color(unit)
  local variables = helper.get_child(unit, "variables")
  local current_skin_and_hair_tag = helper.get_child(variables, "skin_and_hair_colors")
  return current_skin_and_hair_tag[2][2]
end

function recolor_wizard_skin_and_hair(unit, skin_rgb_table, hair_rgb_table)
  local modifications = helper.get_child(unit, "modifications")
  local variables = helper.get_child(unit, "variables")
  local current_skin_and_hair_tag = ensure_presence_of_and_get_subtag(variables, "skin_and_hair_colors")
  local recoloring_object = helper.get_child(modifications, "object", "wizard_skin_and_hair_recoloring_object")
  if not recoloring_object then
    wesnoth.fire("wml_message", { logger="err", message="EoHS: recolor_wizard_skin_and_hair called when wizard does not have wizard_skin_and_hair_recoloring_object"})
    return
  end
  recoloring_effect = recoloring_object[1][2]
  recoloring_effect.add = ""

  current_skin_and_hair_tag[1] = { "skin", skin_rgb_table }
  current_skin_and_hair_tag[2] = { "hair", hair_rgb_table }

  -- this seems like a slightly stupid way to clear the array-like elements (i.e. the color)...
  while recoloring_effect["1"] do table.remove(recoloring_effect) end

  if not skin_rgb_table.use_base then
    local color_range_name = "wizard_recoloring_range_"..skin_rgb_table.r.."_"..skin_rgb_table.g.."_"..skin_rgb_table.b
    create_recoloring_info({ "color_range", { id=color_range_name, rgb=""..skin_rgb_table.r..","..skin_rgb_table.g..","..skin_rgb_table.b..","..math.min(255,skin_rgb_table.r + 128)..","..math.min(255,skin_rgb_table.g + 128)..","..math.min(255,skin_rgb_table.b + 128)..",0,0,0" }})
    recoloring_effect.add = recoloring_effect.add .. "~RC(wizard_skin_"..unit.gender..">"..color_range_name..")"
  end
  if not hair_rgb_table.use_base then
    local color_range_name = "wizard_recoloring_range_"..hair_rgb_table.r.."_"..hair_rgb_table.g.."_"..hair_rgb_table.b
    create_recoloring_info({ "color_range", { id=color_range_name, rgb=""..hair_rgb_table.r..","..hair_rgb_table.g..","..hair_rgb_table.b..","..math.min(255,hair_rgb_table.r + 128)..","..math.min(255,hair_rgb_table.g + 128)..","..math.min(255,hair_rgb_table.b + 128)..",0,0,0" }})
    recoloring_effect.add = recoloring_effect.add .. "~RC(wizard_hair_"..unit.gender..">"..color_range_name..")"
  end
end

  >>
[/lua]

