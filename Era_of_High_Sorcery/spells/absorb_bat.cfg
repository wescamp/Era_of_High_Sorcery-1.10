#textdomain wesnoth-Era_of_High_Sorcery

[lua]
  code=<< beginning_file("absorb_bat.cfg")

table.insert(EoHS_spells, { "absorb_bat", {
  image = "units/undead/zombie-bat-die-3.png", image_xoffs = 0, image_yoffs = 3,
  name = _"Absorb Bat",
  description = _"Absorbs one of your bats that is adjacent to you. You regain the resources you spent to create it. You may not absorb a bat that was just summoned, or one that has already attacked this turn. This does not use up your spell or attack for the turn.",
  base_casting_cost = "free",
  base_range = 1,
  is_instant = true,
  remove_when_unit_creation_forbidden = true,

  { "realm_allowance", {
    realm = "necromancy",
    level = 5,
  }},

  restrictions = function (circumstances, cant_cast_messages)
    if not circumstances.target_unit then
      table.insert(cant_cast_messages, _"There is no unit at the target hex.")
    else
      if circumstances.target_unit.race ~= "bats" then
        table.insert(cant_cast_messages, _"The unit at the target hex is not a bat.")
      else
        if get_unit_variable(circumstances.target_unit, "EoHS_owning_unit") ~= circumstances.caster.underlying_id then
          table.insert(cant_cast_messages, _"The bat at the target hex belongs to a different wizard.")
        else
         if circumstances.target_unit.attacks_left <= 0 then
           table.insert(cant_cast_messages, _"The bat at the target hex has no attacks left.")
          end
        end
      end
    end
  end,

  effects = function (circumstances)
    wesnoth.fire("sound", { name = "magic-dark-big-miss.ogg" })
    local bat_price = get_unit_variable(circumstances.target_unit, "price_originally_summoned_for")
    if bat_price then
      modify_wizard_gold_or_mana(circumstances.caster, bat_price, true)
    else
      -- hack - must have been recruited, as a Vampire Bat
      modify_wizard_gold(circumstances.caster, 13, true)
    end
    -- doesn't count as a kill at all
    wesnoth.fire("kill", { is_same_unit_as(circumstances.target_unit), animate = true, fire_event = false })
    --full_kill(circumstances.caster, { is_same_unit_as(circumstances.target_unit) }, true, false)
  end,
}})

  >>
[/lua]


